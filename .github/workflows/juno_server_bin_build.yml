name: Binary Build

on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - ".github/workflows/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".github/workflows/**"
  workflow_dispatch:

jobs:
  build-deploy-test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go_version: ["^1.18.2"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.1
      - name: Install golang
        uses: actions/setup-go@v4.0.1
        with:
          go-version: "${{ matrix.go_version }}"
      - name: Install Build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install build-essential daemontools libgflags-dev
          sudo apt install openssl -y
          echo "***********************************************************"
          echo "Dependencies version"
          echo "********************==========*****************************"
          echo "GCC Version:" `gcc --version`
          echo "G++ Version:" `g++ --version`
          echo "Openssl Version:" `openssl version`
          echo "Check Multilog:" `which multilog`
          echo "********************==========*****************************"
      - name: Build
        id: run-build
        run: |
          echo "***********************************************************"
          echo "Deploy Juno Binaries"
          echo "********************==========*****************************"
          export BUILDTOP=`pwd`
          binary_build/build.sh
      - name: Deploy
        run: |
          echo "***********************************************************"
          echo "Deploy Juno Services"
          echo "********************==========*****************************"
          export BUILDTOP=`pwd`
          export JUNO_BUILD_DIR=$BUILDTOP/release-binary/code-build
          script/deploy.sh
      - name: Validate
        run: |
          echo "***********************************************************"
          echo "Validate Juno Services"
          echo "********************==========*****************************"
          ps -eaf | grep juno
      - name: Test
        run: |
          echo "***********************************************************"
          echo "Run Functional Tests"
          echo "********************==========*****************************"
          export BUILDTOP=`pwd`
          cd $BUILDTOP/script/test/functest
          $BUILDTOP/script/test/functest/configsetup.sh
          $BUILDTOP/release-binary/tool/go/bin/go test -v -config=config.toml

          echo "***********************************************************"
          echo "Run Unit Tests"
          echo "********************==========*****************************"
          cd $BUILDTOP/script/test/unittest
          $BUILDTOP/release-binary/tool/go/bin/go test -v
