//  
//  Copyright 2023 PayPal Inc.
//  
//  Licensed to the Apache Software Foundation (ASF) under one or more
//  contributor license agreements.  See the NOTICE file distributed with
//  this work for additional information regarding copyright ownership.
//  The ASF licenses this file to You under the Apache License, Version 2.0
//  (the "License"); you may not use this file except in compliance with
//  the License.  You may obtain a copy of the License at
//  
//     http://www.apache.org/licenses/LICENSE-2.0
//  
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//  
//  Package utility provides the utility interfaces for mux package
//  
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Frontier.proto

/*
Package sherlock_frontier_v1 is a generated protocol buffer package.
It is generated from these files:
	Frontier.proto
It has these top-level messages:
	GetSessionReqProto
	GetSessionRespProto
	SessionInfoProto
	RedirectSessionProto
	RegisterReqProto
	RegisterRespProto
	PostRegisteredReqProto
	PostRegisteredRespProto
	PostUnregisteredReqProto
	PostUnregisteredRespProto
	ServerNotificationProto
	SessionNotificationProto
	ServerResponseProto
	ClientRequestProto
	ServerMessageProto
	MetricSetProto
	MetricProto
	MetricValueProto
	PairProto
	SocketAddressProto
*/
package sherlockproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Available client request types.
type ReqRespTypeProto int32

const (
	ReqRespTypeProto_GET_SESSION       ReqRespTypeProto = 1
	ReqRespTypeProto_REGISTER          ReqRespTypeProto = 2
	ReqRespTypeProto_POST_REGISTERED   ReqRespTypeProto = 3
	ReqRespTypeProto_POST_UNREGISTERED ReqRespTypeProto = 4
)

var ReqRespTypeProto_name = map[int32]string{
	1: "GET_SESSION",
	2: "REGISTER",
	3: "POST_REGISTERED",
	4: "POST_UNREGISTERED",
}
var ReqRespTypeProto_value = map[string]int32{
	"GET_SESSION":       1,
	"REGISTER":          2,
	"POST_REGISTERED":   3,
	"POST_UNREGISTERED": 4,
}

func (x ReqRespTypeProto) Enum() *ReqRespTypeProto {
	p := new(ReqRespTypeProto)
	*p = x
	return p
}
func (x ReqRespTypeProto) String() string {
	return proto.EnumName(ReqRespTypeProto_name, int32(x))
}
func (x *ReqRespTypeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReqRespTypeProto_value, data, "ReqRespTypeProto")
	if err != nil {
		return err
	}
	*x = ReqRespTypeProto(value)
	return nil
}
func (ReqRespTypeProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// *
// When a response will be generated for a post request.
type PostConcernProto int32

const (
	PostConcernProto_UNACKNOWLEDGED PostConcernProto = 1
	PostConcernProto_ACKNOWLEDGED   PostConcernProto = 2
	PostConcernProto_PROCESSED      PostConcernProto = 3
)

var PostConcernProto_name = map[int32]string{
	1: "UNACKNOWLEDGED",
	2: "ACKNOWLEDGED",
	3: "PROCESSED",
}
var PostConcernProto_value = map[string]int32{
	"UNACKNOWLEDGED": 1,
	"ACKNOWLEDGED":   2,
	"PROCESSED":      3,
}

func (x PostConcernProto) Enum() *PostConcernProto {
	p := new(PostConcernProto)
	*p = x
	return p
}
func (x PostConcernProto) String() string {
	return proto.EnumName(PostConcernProto_name, int32(x))
}
func (x *PostConcernProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PostConcernProto_value, data, "PostConcernProto")
	if err != nil {
		return err
	}
	*x = PostConcernProto(value)
	return nil
}
func (PostConcernProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetSessionRespProto_Status int32

const (
	GetSessionRespProto_SUCCESS  GetSessionRespProto_Status = 1
	GetSessionRespProto_REDIRECT GetSessionRespProto_Status = 2
)

var GetSessionRespProto_Status_name = map[int32]string{
	1: "SUCCESS",
	2: "REDIRECT",
}
var GetSessionRespProto_Status_value = map[string]int32{
	"SUCCESS":  1,
	"REDIRECT": 2,
}

func (x GetSessionRespProto_Status) Enum() *GetSessionRespProto_Status {
	p := new(GetSessionRespProto_Status)
	*p = x
	return p
}
func (x GetSessionRespProto_Status) String() string {
	return proto.EnumName(GetSessionRespProto_Status_name, int32(x))
}
func (x *GetSessionRespProto_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetSessionRespProto_Status_value, data, "GetSessionRespProto_Status")
	if err != nil {
		return err
	}
	*x = GetSessionRespProto_Status(value)
	return nil
}
func (GetSessionRespProto_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type ServerNotificationProto_Type int32

const (
	ServerNotificationProto_SESSION ServerNotificationProto_Type = 1
)

var ServerNotificationProto_Type_name = map[int32]string{
	1: "SESSION",
}
var ServerNotificationProto_Type_value = map[string]int32{
	"SESSION": 1,
}

func (x ServerNotificationProto_Type) Enum() *ServerNotificationProto_Type {
	p := new(ServerNotificationProto_Type)
	*p = x
	return p
}
func (x ServerNotificationProto_Type) String() string {
	return proto.EnumName(ServerNotificationProto_Type_name, int32(x))
}
func (x *ServerNotificationProto_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerNotificationProto_Type_value, data, "ServerNotificationProto_Type")
	if err != nil {
		return err
	}
	*x = ServerNotificationProto_Type(value)
	return nil
}
func (ServerNotificationProto_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

type SessionNotificationProto_Type int32

const (
	SessionNotificationProto_REDIRECT SessionNotificationProto_Type = 1
	SessionNotificationProto_EXPIRED  SessionNotificationProto_Type = 2
)

var SessionNotificationProto_Type_name = map[int32]string{
	1: "REDIRECT",
	2: "EXPIRED",
}
var SessionNotificationProto_Type_value = map[string]int32{
	"REDIRECT": 1,
	"EXPIRED":  2,
}

func (x SessionNotificationProto_Type) Enum() *SessionNotificationProto_Type {
	p := new(SessionNotificationProto_Type)
	*p = x
	return p
}
func (x SessionNotificationProto_Type) String() string {
	return proto.EnumName(SessionNotificationProto_Type_name, int32(x))
}
func (x *SessionNotificationProto_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SessionNotificationProto_Type_value, data, "SessionNotificationProto_Type")
	if err != nil {
		return err
	}
	*x = SessionNotificationProto_Type(value)
	return nil
}
func (SessionNotificationProto_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 0}
}

type ServerResponseProto_Status int32

const (
	ServerResponseProto_SUCCESS ServerResponseProto_Status = 1
	ServerResponseProto_FAILURE ServerResponseProto_Status = 2
)

var ServerResponseProto_Status_name = map[int32]string{
	1: "SUCCESS",
	2: "FAILURE",
}
var ServerResponseProto_Status_value = map[string]int32{
	"SUCCESS": 1,
	"FAILURE": 2,
}

func (x ServerResponseProto_Status) Enum() *ServerResponseProto_Status {
	p := new(ServerResponseProto_Status)
	*p = x
	return p
}
func (x ServerResponseProto_Status) String() string {
	return proto.EnumName(ServerResponseProto_Status_name, int32(x))
}
func (x *ServerResponseProto_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResponseProto_Status_value, data, "ServerResponseProto_Status")
	if err != nil {
		return err
	}
	*x = ServerResponseProto_Status(value)
	return nil
}
func (ServerResponseProto_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

type ServerResponseProto_ErrorCode int32

const (
	// An unexpected condition was encountered
	ServerResponseProto_SERVER_ERROR ServerResponseProto_ErrorCode = 1
	// The user is not authorized to get a session or an invalid session id was provided.
	ServerResponseProto_BAD_CREDENTIALS ServerResponseProto_ErrorCode = 2
	// The request is either malformed or violates a field constraint.
	ServerResponseProto_BAD_REQUEST ServerResponseProto_ErrorCode = 3
	// A rate limit has been exceeded.
	ServerResponseProto_EXCEEDED_RATE ServerResponseProto_ErrorCode = 4
	// A quota has been exceeded.
	ServerResponseProto_EXCEEDED_QUOTA ServerResponseProto_ErrorCode = 5
	// The node did not receive a timely response from an upstream channel.
	ServerResponseProto_UPSTREAM_TIMEOUT ServerResponseProto_ErrorCode = 6
	// The required upstream channel is unavailable but may become available later.
	ServerResponseProto_UPSTREAM_UNAVAILABLE ServerResponseProto_ErrorCode = 7
)

var ServerResponseProto_ErrorCode_name = map[int32]string{
	1: "SERVER_ERROR",
	2: "BAD_CREDENTIALS",
	3: "BAD_REQUEST",
	4: "EXCEEDED_RATE",
	5: "EXCEEDED_QUOTA",
	6: "UPSTREAM_TIMEOUT",
	7: "UPSTREAM_UNAVAILABLE",
}
var ServerResponseProto_ErrorCode_value = map[string]int32{
	"SERVER_ERROR":         1,
	"BAD_CREDENTIALS":      2,
	"BAD_REQUEST":          3,
	"EXCEEDED_RATE":        4,
	"EXCEEDED_QUOTA":       5,
	"UPSTREAM_TIMEOUT":     6,
	"UPSTREAM_UNAVAILABLE": 7,
}

func (x ServerResponseProto_ErrorCode) Enum() *ServerResponseProto_ErrorCode {
	p := new(ServerResponseProto_ErrorCode)
	*p = x
	return p
}
func (x ServerResponseProto_ErrorCode) String() string {
	return proto.EnumName(ServerResponseProto_ErrorCode_name, int32(x))
}
func (x *ServerResponseProto_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResponseProto_ErrorCode_value, data, "ServerResponseProto_ErrorCode")
	if err != nil {
		return err
	}
	*x = ServerResponseProto_ErrorCode(value)
	return nil
}
func (ServerResponseProto_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 1}
}

type ServerMessageProto_Type int32

const (
	ServerMessageProto_NOTIFICATION ServerMessageProto_Type = 1
	ServerMessageProto_RESPONSE     ServerMessageProto_Type = 2
)

var ServerMessageProto_Type_name = map[int32]string{
	1: "NOTIFICATION",
	2: "RESPONSE",
}
var ServerMessageProto_Type_value = map[string]int32{
	"NOTIFICATION": 1,
	"RESPONSE":     2,
}

func (x ServerMessageProto_Type) Enum() *ServerMessageProto_Type {
	p := new(ServerMessageProto_Type)
	*p = x
	return p
}
func (x ServerMessageProto_Type) String() string {
	return proto.EnumName(ServerMessageProto_Type_name, int32(x))
}
func (x *ServerMessageProto_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerMessageProto_Type_value, data, "ServerMessageProto_Type")
	if err != nil {
		return err
	}
	*x = ServerMessageProto_Type(value)
	return nil
}
func (ServerMessageProto_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

type MetricProto_MetricTypeProto int32

const (
	MetricProto_GAUGE                      MetricProto_MetricTypeProto = 1
	MetricProto_COUNTER                    MetricProto_MetricTypeProto = 2
	MetricProto_COUNTER_CREATE_GAUGE       MetricProto_MetricTypeProto = 3
	MetricProto_COUNTER_REPLACE_WITH_GAUGE MetricProto_MetricTypeProto = 4
)

var MetricProto_MetricTypeProto_name = map[int32]string{
	1: "GAUGE",
	2: "COUNTER",
	3: "COUNTER_CREATE_GAUGE",
	4: "COUNTER_REPLACE_WITH_GAUGE",
}
var MetricProto_MetricTypeProto_value = map[string]int32{
	"GAUGE":                      1,
	"COUNTER":                    2,
	"COUNTER_CREATE_GAUGE":       3,
	"COUNTER_REPLACE_WITH_GAUGE": 4,
}

func (x MetricProto_MetricTypeProto) Enum() *MetricProto_MetricTypeProto {
	p := new(MetricProto_MetricTypeProto)
	*p = x
	return p
}
func (x MetricProto_MetricTypeProto) String() string {
	return proto.EnumName(MetricProto_MetricTypeProto_name, int32(x))
}
func (x *MetricProto_MetricTypeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricProto_MetricTypeProto_value, data, "MetricProto_MetricTypeProto")
	if err != nil {
		return err
	}
	*x = MetricProto_MetricTypeProto(value)
	return nil
}
func (MetricProto_MetricTypeProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 0}
}

type MetricProto_ValueTypeProto int32

const (
	MetricProto_INT    MetricProto_ValueTypeProto = 1
	MetricProto_LONG   MetricProto_ValueTypeProto = 2
	MetricProto_FLOAT  MetricProto_ValueTypeProto = 3
	MetricProto_DOUBLE MetricProto_ValueTypeProto = 4
)

var MetricProto_ValueTypeProto_name = map[int32]string{
	1: "INT",
	2: "LONG",
	3: "FLOAT",
	4: "DOUBLE",
}
var MetricProto_ValueTypeProto_value = map[string]int32{
	"INT":    1,
	"LONG":   2,
	"FLOAT":  3,
	"DOUBLE": 4,
}

func (x MetricProto_ValueTypeProto) Enum() *MetricProto_ValueTypeProto {
	p := new(MetricProto_ValueTypeProto)
	*p = x
	return p
}
func (x MetricProto_ValueTypeProto) String() string {
	return proto.EnumName(MetricProto_ValueTypeProto_name, int32(x))
}
func (x *MetricProto_ValueTypeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricProto_ValueTypeProto_value, data, "MetricProto_ValueTypeProto")
	if err != nil {
		return err
	}
	*x = MetricProto_ValueTypeProto(value)
	return nil
}
func (MetricProto_ValueTypeProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 1}
}

// *
// Request to get a session.
type GetSessionReqProto struct {
	UserPair         []*PairProto `protobuf:"bytes,1,rep,name=user_pair,json=userPair" json:"user_pair,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GetSessionReqProto) Reset()                    { *m = GetSessionReqProto{} }
func (m *GetSessionReqProto) String() string            { return proto.CompactTextString(m) }
func (*GetSessionReqProto) ProtoMessage()               {}
func (*GetSessionReqProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetSessionReqProto) GetUserPair() []*PairProto {
	if m != nil {
		return m.UserPair
	}
	return nil
}

// *
// Response for getting a session.
type GetSessionRespProto struct {
	Status           *GetSessionRespProto_Status `protobuf:"varint,1,opt,name=status,enum=sherlock.frontier.v1.GetSessionRespProto_Status" json:"status,omitempty"`
	SessionInfo      *SessionInfoProto           `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo" json:"session_info,omitempty"`
	RedirectSession  *RedirectSessionProto       `protobuf:"bytes,3,opt,name=redirect_session,json=redirectSession" json:"redirect_session,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *GetSessionRespProto) Reset()                    { *m = GetSessionRespProto{} }
func (m *GetSessionRespProto) String() string            { return proto.CompactTextString(m) }
func (*GetSessionRespProto) ProtoMessage()               {}
func (*GetSessionRespProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetSessionRespProto) GetStatus() GetSessionRespProto_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return GetSessionRespProto_SUCCESS
}

func (m *GetSessionRespProto) GetSessionInfo() *SessionInfoProto {
	if m != nil {
		return m.SessionInfo
	}
	return nil
}

func (m *GetSessionRespProto) GetRedirectSession() *RedirectSessionProto {
	if m != nil {
		return m.RedirectSession
	}
	return nil
}

// *
// Information pertaining to a session.
type SessionInfoProto struct {
	Id               []byte `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SessionInfoProto) Reset()                    { *m = SessionInfoProto{} }
func (m *SessionInfoProto) String() string            { return proto.CompactTextString(m) }
func (*SessionInfoProto) ProtoMessage()               {}
func (*SessionInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SessionInfoProto) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

// *
// Redirection information for a session.
type RedirectSessionProto struct {
	SocketAddress    *SocketAddressProto `protobuf:"bytes,1,req,name=socket_address,json=socketAddress" json:"socket_address,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RedirectSessionProto) Reset()                    { *m = RedirectSessionProto{} }
func (m *RedirectSessionProto) String() string            { return proto.CompactTextString(m) }
func (*RedirectSessionProto) ProtoMessage()               {}
func (*RedirectSessionProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RedirectSessionProto) GetSocketAddress() *SocketAddressProto {
	if m != nil {
		return m.SocketAddress
	}
	return nil
}

// *
// Registration operation to perform.
type RegisterReqProto struct {
	SessionId        []byte          `protobuf:"bytes,1,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	MetricSet        *MetricSetProto `protobuf:"bytes,2,req,name=metric_set,json=metricSet" json:"metric_set,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RegisterReqProto) Reset()                    { *m = RegisterReqProto{} }
func (m *RegisterReqProto) String() string            { return proto.CompactTextString(m) }
func (*RegisterReqProto) ProtoMessage()               {}
func (*RegisterReqProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RegisterReqProto) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *RegisterReqProto) GetMetricSet() *MetricSetProto {
	if m != nil {
		return m.MetricSet
	}
	return nil
}

// *
// Result of a registration operation.
type RegisterRespProto struct {
	MetricId         [][]byte `protobuf:"bytes,1,rep,name=metric_id,json=metricId" json:"metric_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RegisterRespProto) Reset()                    { *m = RegisterRespProto{} }
func (m *RegisterRespProto) String() string            { return proto.CompactTextString(m) }
func (*RegisterRespProto) ProtoMessage()               {}
func (*RegisterRespProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RegisterRespProto) GetMetricId() [][]byte {
	if m != nil {
		return m.MetricId
	}
	return nil
}

// *
// Post (registered) operation to perform.
type PostRegisteredReqProto struct {
	SessionId        []byte              `protobuf:"bytes,1,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	PostConcern      *PostConcernProto   `protobuf:"varint,2,req,name=post_concern,json=postConcern,enum=sherlock.frontier.v1.PostConcernProto" json:"post_concern,omitempty"`
	EpochSecond      *uint32             `protobuf:"fixed32,3,req,name=epoch_second,json=epochSecond" json:"epoch_second,omitempty"`
	MetricId         [][]byte            `protobuf:"bytes,4,rep,name=metric_id,json=metricId" json:"metric_id,omitempty"`
	MetricValue      []*MetricValueProto `protobuf:"bytes,5,rep,name=metric_value,json=metricValue" json:"metric_value,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PostRegisteredReqProto) Reset()                    { *m = PostRegisteredReqProto{} }
func (m *PostRegisteredReqProto) String() string            { return proto.CompactTextString(m) }
func (*PostRegisteredReqProto) ProtoMessage()               {}
func (*PostRegisteredReqProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PostRegisteredReqProto) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *PostRegisteredReqProto) GetPostConcern() PostConcernProto {
	if m != nil && m.PostConcern != nil {
		return *m.PostConcern
	}
	return PostConcernProto_UNACKNOWLEDGED
}

func (m *PostRegisteredReqProto) GetEpochSecond() uint32 {
	if m != nil && m.EpochSecond != nil {
		return *m.EpochSecond
	}
	return 0
}

func (m *PostRegisteredReqProto) GetMetricId() [][]byte {
	if m != nil {
		return m.MetricId
	}
	return nil
}

func (m *PostRegisteredReqProto) GetMetricValue() []*MetricValueProto {
	if m != nil {
		return m.MetricValue
	}
	return nil
}

// *
// Result of a post (registered) operation.
type PostRegisteredRespProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PostRegisteredRespProto) Reset()                    { *m = PostRegisteredRespProto{} }
func (m *PostRegisteredRespProto) String() string            { return proto.CompactTextString(m) }
func (*PostRegisteredRespProto) ProtoMessage()               {}
func (*PostRegisteredRespProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// *
// Post (unregistered) operation to perform.
type PostUnregisteredReqProto struct {
	SessionId        []byte            `protobuf:"bytes,1,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	PostConcern      *PostConcernProto `protobuf:"varint,2,req,name=post_concern,json=postConcern,enum=sherlock.frontier.v1.PostConcernProto" json:"post_concern,omitempty"`
	EpochSecond      *uint32           `protobuf:"fixed32,3,req,name=epoch_second,json=epochSecond" json:"epoch_second,omitempty"`
	MetricSet        *MetricSetProto   `protobuf:"bytes,4,req,name=metric_set,json=metricSet" json:"metric_set,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PostUnregisteredReqProto) Reset()                    { *m = PostUnregisteredReqProto{} }
func (m *PostUnregisteredReqProto) String() string            { return proto.CompactTextString(m) }
func (*PostUnregisteredReqProto) ProtoMessage()               {}
func (*PostUnregisteredReqProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PostUnregisteredReqProto) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *PostUnregisteredReqProto) GetPostConcern() PostConcernProto {
	if m != nil && m.PostConcern != nil {
		return *m.PostConcern
	}
	return PostConcernProto_UNACKNOWLEDGED
}

func (m *PostUnregisteredReqProto) GetEpochSecond() uint32 {
	if m != nil && m.EpochSecond != nil {
		return *m.EpochSecond
	}
	return 0
}

func (m *PostUnregisteredReqProto) GetMetricSet() *MetricSetProto {
	if m != nil {
		return m.MetricSet
	}
	return nil
}

// *
// Result of post (unregistered) operation.
type PostUnregisteredRespProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PostUnregisteredRespProto) Reset()                    { *m = PostUnregisteredRespProto{} }
func (m *PostUnregisteredRespProto) String() string            { return proto.CompactTextString(m) }
func (*PostUnregisteredRespProto) ProtoMessage()               {}
func (*PostUnregisteredRespProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// *
// A notification sent by the server to a client
type ServerNotificationProto struct {
	Type                *ServerNotificationProto_Type `protobuf:"varint,1,opt,name=type,enum=sherlock.frontier.v1.ServerNotificationProto_Type" json:"type,omitempty"`
	SessionNotification *SessionNotificationProto     `protobuf:"bytes,2,opt,name=session_notification,json=sessionNotification" json:"session_notification,omitempty"`
	XXX_unrecognized    []byte                        `json:"-"`
}

func (m *ServerNotificationProto) Reset()                    { *m = ServerNotificationProto{} }
func (m *ServerNotificationProto) String() string            { return proto.CompactTextString(m) }
func (*ServerNotificationProto) ProtoMessage()               {}
func (*ServerNotificationProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ServerNotificationProto) GetType() ServerNotificationProto_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ServerNotificationProto_SESSION
}

func (m *ServerNotificationProto) GetSessionNotification() *SessionNotificationProto {
	if m != nil {
		return m.SessionNotification
	}
	return nil
}

// *
// Session notification
type SessionNotificationProto struct {
	SessionId        []byte                         `protobuf:"bytes,1,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Type             *SessionNotificationProto_Type `protobuf:"varint,2,opt,name=type,enum=sherlock.frontier.v1.SessionNotificationProto_Type" json:"type,omitempty"`
	RedirectSession  *RedirectSessionProto          `protobuf:"bytes,3,opt,name=redirect_session,json=redirectSession" json:"redirect_session,omitempty"`
	ExpireCause      *string                        `protobuf:"bytes,4,opt,name=expire_cause,json=expireCause" json:"expire_cause,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *SessionNotificationProto) Reset()                    { *m = SessionNotificationProto{} }
func (m *SessionNotificationProto) String() string            { return proto.CompactTextString(m) }
func (*SessionNotificationProto) ProtoMessage()               {}
func (*SessionNotificationProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SessionNotificationProto) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *SessionNotificationProto) GetType() SessionNotificationProto_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SessionNotificationProto_REDIRECT
}

func (m *SessionNotificationProto) GetRedirectSession() *RedirectSessionProto {
	if m != nil {
		return m.RedirectSession
	}
	return nil
}

func (m *SessionNotificationProto) GetExpireCause() string {
	if m != nil && m.ExpireCause != nil {
		return *m.ExpireCause
	}
	return ""
}

// *
// A response sent by the server to a client about a request
type ServerResponseProto struct {
	Type                     *ReqRespTypeProto              `protobuf:"varint,1,opt,name=type,enum=sherlock.frontier.v1.ReqRespTypeProto" json:"type,omitempty"`
	Id                       *uint32                        `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Status                   *ServerResponseProto_Status    `protobuf:"varint,3,req,name=status,enum=sherlock.frontier.v1.ServerResponseProto_Status" json:"status,omitempty"`
	ErrCode                  *ServerResponseProto_ErrorCode `protobuf:"varint,4,opt,name=err_code,json=errCode,enum=sherlock.frontier.v1.ServerResponseProto_ErrorCode" json:"err_code,omitempty"`
	ErrMsg                   *string                        `protobuf:"bytes,5,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
	GetSessionResponse       *GetSessionRespProto           `protobuf:"bytes,6,opt,name=get_session_response,json=getSessionResponse" json:"get_session_response,omitempty"`
	RegisterResponse         *RegisterRespProto             `protobuf:"bytes,7,opt,name=register_response,json=registerResponse" json:"register_response,omitempty"`
	PostRegisteredResponse   *PostRegisteredRespProto       `protobuf:"bytes,8,opt,name=post_registered_response,json=postRegisteredResponse" json:"post_registered_response,omitempty"`
	PostUnregisteredResponse *PostUnregisteredRespProto     `protobuf:"bytes,9,opt,name=post_unregistered_response,json=postUnregisteredResponse" json:"post_unregistered_response,omitempty"`
	XXX_unrecognized         []byte                         `json:"-"`
}

func (m *ServerResponseProto) Reset()                    { *m = ServerResponseProto{} }
func (m *ServerResponseProto) String() string            { return proto.CompactTextString(m) }
func (*ServerResponseProto) ProtoMessage()               {}
func (*ServerResponseProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ServerResponseProto) GetType() ReqRespTypeProto {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ReqRespTypeProto_GET_SESSION
}

func (m *ServerResponseProto) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ServerResponseProto) GetStatus() ServerResponseProto_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ServerResponseProto_SUCCESS
}

func (m *ServerResponseProto) GetErrCode() ServerResponseProto_ErrorCode {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return ServerResponseProto_SERVER_ERROR
}

func (m *ServerResponseProto) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *ServerResponseProto) GetGetSessionResponse() *GetSessionRespProto {
	if m != nil {
		return m.GetSessionResponse
	}
	return nil
}

func (m *ServerResponseProto) GetRegisterResponse() *RegisterRespProto {
	if m != nil {
		return m.RegisterResponse
	}
	return nil
}

func (m *ServerResponseProto) GetPostRegisteredResponse() *PostRegisteredRespProto {
	if m != nil {
		return m.PostRegisteredResponse
	}
	return nil
}

func (m *ServerResponseProto) GetPostUnregisteredResponse() *PostUnregisteredRespProto {
	if m != nil {
		return m.PostUnregisteredResponse
	}
	return nil
}

// *
// A request from the client to the server.
type ClientRequestProto struct {
	Header                  []*PairProto              `protobuf:"bytes,1,rep,name=header" json:"header,omitempty"`
	Type                    *ReqRespTypeProto         `protobuf:"varint,2,opt,name=type,enum=sherlock.frontier.v1.ReqRespTypeProto" json:"type,omitempty"`
	Id                      *uint32                   `protobuf:"varint,3,req,name=id" json:"id,omitempty"`
	GetSessionRequest       *GetSessionReqProto       `protobuf:"bytes,4,opt,name=get_session_request,json=getSessionRequest" json:"get_session_request,omitempty"`
	RegisterRequest         *RegisterReqProto         `protobuf:"bytes,5,opt,name=register_request,json=registerRequest" json:"register_request,omitempty"`
	PostRegisteredRequest   *PostRegisteredReqProto   `protobuf:"bytes,6,opt,name=post_registered_request,json=postRegisteredRequest" json:"post_registered_request,omitempty"`
	PostUnregisteredRequest *PostUnregisteredReqProto `protobuf:"bytes,7,opt,name=post_unregistered_request,json=postUnregisteredRequest" json:"post_unregistered_request,omitempty"`
	XXX_unrecognized        []byte                    `json:"-"`
}

func (m *ClientRequestProto) Reset()                    { *m = ClientRequestProto{} }
func (m *ClientRequestProto) String() string            { return proto.CompactTextString(m) }
func (*ClientRequestProto) ProtoMessage()               {}
func (*ClientRequestProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ClientRequestProto) GetHeader() []*PairProto {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ClientRequestProto) GetType() ReqRespTypeProto {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ReqRespTypeProto_GET_SESSION
}

func (m *ClientRequestProto) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ClientRequestProto) GetGetSessionRequest() *GetSessionReqProto {
	if m != nil {
		return m.GetSessionRequest
	}
	return nil
}

func (m *ClientRequestProto) GetRegisterRequest() *RegisterReqProto {
	if m != nil {
		return m.RegisterRequest
	}
	return nil
}

func (m *ClientRequestProto) GetPostRegisteredRequest() *PostRegisteredReqProto {
	if m != nil {
		return m.PostRegisteredRequest
	}
	return nil
}

func (m *ClientRequestProto) GetPostUnregisteredRequest() *PostUnregisteredReqProto {
	if m != nil {
		return m.PostUnregisteredRequest
	}
	return nil
}

// *
// A message from the server to the client.
type ServerMessageProto struct {
	Header             []*PairProto             `protobuf:"bytes,1,rep,name=header" json:"header,omitempty"`
	Type               *ServerMessageProto_Type `protobuf:"varint,2,req,name=type,enum=sherlock.frontier.v1.ServerMessageProto_Type" json:"type,omitempty"`
	ServerNotification *ServerNotificationProto `protobuf:"bytes,3,opt,name=server_notification,json=serverNotification" json:"server_notification,omitempty"`
	ServerResponse     *ServerResponseProto     `protobuf:"bytes,4,opt,name=server_response,json=serverResponse" json:"server_response,omitempty"`
	XXX_unrecognized   []byte                   `json:"-"`
}

func (m *ServerMessageProto) Reset()                    { *m = ServerMessageProto{} }
func (m *ServerMessageProto) String() string            { return proto.CompactTextString(m) }
func (*ServerMessageProto) ProtoMessage()               {}
func (*ServerMessageProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ServerMessageProto) GetHeader() []*PairProto {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ServerMessageProto) GetType() ServerMessageProto_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ServerMessageProto_NOTIFICATION
}

func (m *ServerMessageProto) GetServerNotification() *ServerNotificationProto {
	if m != nil {
		return m.ServerNotification
	}
	return nil
}

func (m *ServerMessageProto) GetServerResponse() *ServerResponseProto {
	if m != nil {
		return m.ServerResponse
	}
	return nil
}

// *
// A set of metrics in a topology.
type MetricSetProto struct {
	ResolutionSeconds *uint32        `protobuf:"varint,1,req,name=resolution_seconds,json=resolutionSeconds" json:"resolution_seconds,omitempty"`
	Profile           *string        `protobuf:"bytes,2,req,name=profile" json:"profile,omitempty"`
	Dimension         []*PairProto   `protobuf:"bytes,3,rep,name=dimension" json:"dimension,omitempty"`
	Metric            []*MetricProto `protobuf:"bytes,4,rep,name=metric" json:"metric,omitempty"`
	XXX_unrecognized  []byte         `json:"-"`
}

func (m *MetricSetProto) Reset()                    { *m = MetricSetProto{} }
func (m *MetricSetProto) String() string            { return proto.CompactTextString(m) }
func (*MetricSetProto) ProtoMessage()               {}
func (*MetricSetProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *MetricSetProto) GetResolutionSeconds() uint32 {
	if m != nil && m.ResolutionSeconds != nil {
		return *m.ResolutionSeconds
	}
	return 0
}

func (m *MetricSetProto) GetProfile() string {
	if m != nil && m.Profile != nil {
		return *m.Profile
	}
	return ""
}

func (m *MetricSetProto) GetDimension() []*PairProto {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *MetricSetProto) GetMetric() []*MetricProto {
	if m != nil {
		return m.Metric
	}
	return nil
}

// *
// A metric.
type MetricProto struct {
	Name             *string                      `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	MetricType       *MetricProto_MetricTypeProto `protobuf:"varint,2,opt,name=metric_type,json=metricType,enum=sherlock.frontier.v1.MetricProto_MetricTypeProto" json:"metric_type,omitempty"`
	ValueType        *MetricProto_ValueTypeProto  `protobuf:"varint,3,opt,name=value_type,json=valueType,enum=sherlock.frontier.v1.MetricProto_ValueTypeProto" json:"value_type,omitempty"`
	Value            *MetricValueProto            `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *MetricProto) Reset()                    { *m = MetricProto{} }
func (m *MetricProto) String() string            { return proto.CompactTextString(m) }
func (*MetricProto) ProtoMessage()               {}
func (*MetricProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MetricProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MetricProto) GetMetricType() MetricProto_MetricTypeProto {
	if m != nil && m.MetricType != nil {
		return *m.MetricType
	}
	return MetricProto_GAUGE
}

func (m *MetricProto) GetValueType() MetricProto_ValueTypeProto {
	if m != nil && m.ValueType != nil {
		return *m.ValueType
	}
	return MetricProto_INT
}

func (m *MetricProto) GetValue() *MetricValueProto {
	if m != nil {
		return m.Value
	}
	return nil
}

// *
// A metric value.
type MetricValueProto struct {
	Int32Value       *int32   `protobuf:"varint,1,opt,name=int32_value,json=int32Value" json:"int32_value,omitempty"`
	Int64Value       *int64   `protobuf:"varint,2,opt,name=int64_value,json=int64Value" json:"int64_value,omitempty"`
	FloatValue       *float32 `protobuf:"fixed32,3,opt,name=float_value,json=floatValue" json:"float_value,omitempty"`
	DoubleValue      *float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue" json:"double_value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MetricValueProto) Reset()                    { *m = MetricValueProto{} }
func (m *MetricValueProto) String() string            { return proto.CompactTextString(m) }
func (*MetricValueProto) ProtoMessage()               {}
func (*MetricValueProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MetricValueProto) GetInt32Value() int32 {
	if m != nil && m.Int32Value != nil {
		return *m.Int32Value
	}
	return 0
}

func (m *MetricValueProto) GetInt64Value() int64 {
	if m != nil && m.Int64Value != nil {
		return *m.Int64Value
	}
	return 0
}

func (m *MetricValueProto) GetFloatValue() float32 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *MetricValueProto) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

// *
// A pair in an associative array.
type PairProto struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PairProto) Reset()                    { *m = PairProto{} }
func (m *PairProto) String() string            { return proto.CompactTextString(m) }
func (*PairProto) ProtoMessage()               {}
func (*PairProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PairProto) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *PairProto) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// *
// A remote socket address.
type SocketAddressProto struct {
	Address          *string `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Port             *uint32 `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SocketAddressProto) Reset()                    { *m = SocketAddressProto{} }
func (m *SocketAddressProto) String() string            { return proto.CompactTextString(m) }
func (*SocketAddressProto) ProtoMessage()               {}
func (*SocketAddressProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *SocketAddressProto) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *SocketAddressProto) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*GetSessionReqProto)(nil), "sherlock.frontier.v1.GetSessionReqProto")
	proto.RegisterType((*GetSessionRespProto)(nil), "sherlock.frontier.v1.GetSessionRespProto")
	proto.RegisterType((*SessionInfoProto)(nil), "sherlock.frontier.v1.SessionInfoProto")
	proto.RegisterType((*RedirectSessionProto)(nil), "sherlock.frontier.v1.RedirectSessionProto")
	proto.RegisterType((*RegisterReqProto)(nil), "sherlock.frontier.v1.RegisterReqProto")
	proto.RegisterType((*RegisterRespProto)(nil), "sherlock.frontier.v1.RegisterRespProto")
	proto.RegisterType((*PostRegisteredReqProto)(nil), "sherlock.frontier.v1.PostRegisteredReqProto")
	proto.RegisterType((*PostRegisteredRespProto)(nil), "sherlock.frontier.v1.PostRegisteredRespProto")
	proto.RegisterType((*PostUnregisteredReqProto)(nil), "sherlock.frontier.v1.PostUnregisteredReqProto")
	proto.RegisterType((*PostUnregisteredRespProto)(nil), "sherlock.frontier.v1.PostUnregisteredRespProto")
	proto.RegisterType((*ServerNotificationProto)(nil), "sherlock.frontier.v1.ServerNotificationProto")
	proto.RegisterType((*SessionNotificationProto)(nil), "sherlock.frontier.v1.SessionNotificationProto")
	proto.RegisterType((*ServerResponseProto)(nil), "sherlock.frontier.v1.ServerResponseProto")
	proto.RegisterType((*ClientRequestProto)(nil), "sherlock.frontier.v1.ClientRequestProto")
	proto.RegisterType((*ServerMessageProto)(nil), "sherlock.frontier.v1.ServerMessageProto")
	proto.RegisterType((*MetricSetProto)(nil), "sherlock.frontier.v1.MetricSetProto")
	proto.RegisterType((*MetricProto)(nil), "sherlock.frontier.v1.MetricProto")
	proto.RegisterType((*MetricValueProto)(nil), "sherlock.frontier.v1.MetricValueProto")
	proto.RegisterType((*PairProto)(nil), "sherlock.frontier.v1.PairProto")
	proto.RegisterType((*SocketAddressProto)(nil), "sherlock.frontier.v1.SocketAddressProto")
	proto.RegisterEnum("sherlock.frontier.v1.ReqRespTypeProto", ReqRespTypeProto_name, ReqRespTypeProto_value)
	proto.RegisterEnum("sherlock.frontier.v1.PostConcernProto", PostConcernProto_name, PostConcernProto_value)
	proto.RegisterEnum("sherlock.frontier.v1.GetSessionRespProto_Status", GetSessionRespProto_Status_name, GetSessionRespProto_Status_value)
	proto.RegisterEnum("sherlock.frontier.v1.ServerNotificationProto_Type", ServerNotificationProto_Type_name, ServerNotificationProto_Type_value)
	proto.RegisterEnum("sherlock.frontier.v1.SessionNotificationProto_Type", SessionNotificationProto_Type_name, SessionNotificationProto_Type_value)
	proto.RegisterEnum("sherlock.frontier.v1.ServerResponseProto_Status", ServerResponseProto_Status_name, ServerResponseProto_Status_value)
	proto.RegisterEnum("sherlock.frontier.v1.ServerResponseProto_ErrorCode", ServerResponseProto_ErrorCode_name, ServerResponseProto_ErrorCode_value)
	proto.RegisterEnum("sherlock.frontier.v1.ServerMessageProto_Type", ServerMessageProto_Type_name, ServerMessageProto_Type_value)
	proto.RegisterEnum("sherlock.frontier.v1.MetricProto_MetricTypeProto", MetricProto_MetricTypeProto_name, MetricProto_MetricTypeProto_value)
	proto.RegisterEnum("sherlock.frontier.v1.MetricProto_ValueTypeProto", MetricProto_ValueTypeProto_name, MetricProto_ValueTypeProto_value)
}

func init() { proto.RegisterFile("Frontier.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1648 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x5f, 0x6f, 0xdb, 0xc8,
	0x11, 0x07, 0x29, 0x59, 0xb2, 0x46, 0xb2, 0x4c, 0xaf, 0x7d, 0x67, 0xe6, 0x0e, 0xed, 0x39, 0x6c,
	0x91, 0xba, 0x41, 0xa3, 0x26, 0xce, 0xe1, 0x8a, 0x1e, 0xae, 0x40, 0x69, 0x69, 0xad, 0x10, 0x95,
	0x25, 0x65, 0x49, 0xe5, 0x02, 0x14, 0x2d, 0xa1, 0x48, 0x6b, 0x85, 0x8d, 0x4c, 0x2a, 0xbb, 0x94,
	0xd1, 0x7c, 0x88, 0xbe, 0x1f, 0xfa, 0xd2, 0xa7, 0xf6, 0x0b, 0xf5, 0xa9, 0x6f, 0xfd, 0x00, 0xf7,
	0x21, 0x8a, 0xfd, 0x23, 0x89, 0xfa, 0x7b, 0xee, 0x15, 0x05, 0xee, 0x4d, 0x9c, 0x9d, 0xfd, 0xcd,
	0xec, 0xec, 0xcc, 0x6f, 0x66, 0x05, 0xd5, 0x2b, 0x96, 0xc4, 0x69, 0x44, 0x59, 0x6d, 0xc2, 0x92,
	0x34, 0x41, 0x27, 0xfc, 0x2d, 0x65, 0xe3, 0x64, 0xf0, 0xae, 0x76, 0x33, 0x5b, 0xb8, 0x7b, 0xe6,
	0x10, 0x40, 0x4d, 0x9a, 0xfa, 0x94, 0xf3, 0x28, 0x89, 0x09, 0x7d, 0xdf, 0x95, 0xba, 0x5f, 0x41,
	0x69, 0xca, 0x29, 0x0b, 0x27, 0xfd, 0x88, 0xd9, 0xc6, 0x59, 0xee, 0xbc, 0x7c, 0xf1, 0x59, 0x6d,
	0xd3, 0xfe, 0x5a, 0xb7, 0x1f, 0x31, 0xb9, 0x87, 0xec, 0x8b, 0x1d, 0xe2, 0xd3, 0xf9, 0x87, 0x09,
	0xc7, 0x59, 0x50, 0x3e, 0x51, 0xa8, 0x2f, 0xa0, 0xc0, 0xd3, 0x7e, 0x3a, 0xe5, 0xb6, 0x71, 0x66,
	0x9c, 0x57, 0x2f, 0x9e, 0x6e, 0x86, 0xdc, 0xb0, 0xb5, 0xe6, 0xcb, 0x7d, 0x44, 0xef, 0x47, 0x1e,
	0x54, 0xb8, 0x52, 0x09, 0xa3, 0xf8, 0x26, 0xb1, 0xcd, 0x33, 0xe3, 0xbc, 0x7c, 0xf1, 0x68, 0x33,
	0x9e, 0x06, 0xf3, 0xe2, 0x9b, 0x44, 0x79, 0x5a, 0xe6, 0x0b, 0x09, 0xea, 0x81, 0xc5, 0xe8, 0x30,
	0x62, 0x74, 0x90, 0x86, 0x5a, 0x6e, 0xe7, 0x24, 0xdc, 0xe3, 0xcd, 0x70, 0x44, 0x6b, 0x6b, 0x58,
	0x05, 0x79, 0xc8, 0x96, 0xa5, 0xce, 0x4f, 0xa0, 0xa0, 0x7c, 0x46, 0x65, 0x28, 0xfa, 0xbd, 0x7a,
	0x1d, 0xfb, 0xbe, 0x65, 0xa0, 0x0a, 0xec, 0x13, 0xdc, 0xf0, 0x08, 0xae, 0x07, 0x96, 0xe9, 0x38,
	0x60, 0xad, 0x3a, 0x87, 0xaa, 0x60, 0x46, 0x43, 0xdb, 0x38, 0x33, 0xcf, 0x2b, 0xc4, 0x8c, 0x86,
	0xce, 0x08, 0x4e, 0x36, 0x59, 0x44, 0x1d, 0xa8, 0xf2, 0x64, 0xf0, 0x8e, 0xa6, 0x61, 0x7f, 0x38,
	0x64, 0x94, 0x73, 0xb9, 0xa7, 0x7c, 0x71, 0xbe, 0x25, 0x08, 0x52, 0xd7, 0x55, 0xaa, 0xca, 0xe7,
	0x03, 0x9e, 0x95, 0x39, 0x77, 0x60, 0x11, 0x3a, 0x8a, 0x78, 0x4a, 0xd9, 0x3c, 0x0f, 0x7e, 0x04,
	0x30, 0x8f, 0xf3, 0xcc, 0xa9, 0xd2, 0x2c, 0x7a, 0x43, 0x54, 0x07, 0xb8, 0xa5, 0x29, 0x8b, 0x06,
	0x21, 0xa7, 0xa9, 0x6d, 0x4a, 0xfb, 0x3f, 0xdd, 0x6c, 0xff, 0x5a, 0xea, 0xf9, 0x34, 0x55, 0xb6,
	0x4b, 0xb7, 0xb3, 0x6f, 0xe7, 0x29, 0x1c, 0x2d, 0xec, 0xce, 0x52, 0xe5, 0x53, 0xd0, 0x1a, 0xca,
	0x6e, 0xee, 0xbc, 0x42, 0xf6, 0x95, 0xc0, 0x1b, 0x3a, 0x7f, 0x31, 0xe1, 0xe3, 0x6e, 0xc2, 0xd3,
	0xd9, 0x36, 0x3a, 0xbc, 0xaf, 0xc3, 0x1e, 0x54, 0x26, 0x09, 0x4f, 0xc3, 0x41, 0x12, 0x0f, 0x28,
	0x8b, 0xa5, 0xcb, 0xd5, 0x6d, 0x79, 0x23, 0x4c, 0xd4, 0x95, 0xa2, 0xce, 0x9b, 0xc9, 0x42, 0x82,
	0x1e, 0x42, 0x85, 0x4e, 0x92, 0xc1, 0xdb, 0x90, 0xd3, 0x41, 0x12, 0x0f, 0xed, 0xdc, 0x99, 0x79,
	0x5e, 0x24, 0x65, 0x29, 0xf3, 0xa5, 0x68, 0xf9, 0x10, 0xf9, 0xe5, 0x43, 0x08, 0x57, 0xf4, 0xe2,
	0x5d, 0x7f, 0x3c, 0xa5, 0xf6, 0x9e, 0xac, 0xb2, 0x47, 0xbb, 0xa2, 0xf7, 0x4a, 0x28, 0x6a, 0x57,
	0x6e, 0x17, 0x12, 0xe7, 0x01, 0x9c, 0xae, 0x86, 0x43, 0xc7, 0xd1, 0xf9, 0xd6, 0x00, 0x5b, 0xac,
	0xf5, 0x62, 0xf6, 0x03, 0x0f, 0xd6, 0x72, 0x2e, 0xe5, 0xbf, 0x5f, 0x2e, 0x7d, 0x0a, 0x0f, 0xd6,
	0x4f, 0x3b, 0x8b, 0xc5, 0xbf, 0x0c, 0x38, 0xf5, 0x29, 0xbb, 0xa3, 0xac, 0x9d, 0xa4, 0xd1, 0x4d,
	0x34, 0xe8, 0xa7, 0xf3, 0x6a, 0xba, 0x82, 0x7c, 0xfa, 0x61, 0x42, 0x35, 0x31, 0x5d, 0x6c, 0x23,
	0x92, 0x8d, 0x9b, 0x6b, 0xc1, 0x87, 0x09, 0x25, 0x72, 0x3f, 0xea, 0xc3, 0xc9, 0x2c, 0xa4, 0x71,
	0x46, 0x4f, 0x13, 0x54, 0x6d, 0x27, 0x41, 0xad, 0x01, 0x93, 0x63, 0xbe, 0xbe, 0xe2, 0x1c, 0x43,
	0x5e, 0x18, 0x94, 0xbc, 0x82, 0x7d, 0xdf, 0xeb, 0xb4, 0x2d, 0xc3, 0xf9, 0x9b, 0x09, 0xf6, 0x36,
	0x98, 0xef, 0xba, 0xe7, 0xa6, 0x3e, 0xbb, 0x29, 0xcf, 0xfe, 0xfc, 0xbf, 0xf3, 0x31, 0x7b, 0xf8,
	0xff, 0x0f, 0x95, 0xca, 0xe4, 0xf9, 0xf3, 0x24, 0x62, 0x34, 0x1c, 0xf4, 0xa7, 0x9c, 0xda, 0xf9,
	0x33, 0xe3, 0xbc, 0x44, 0xca, 0x4a, 0x56, 0x17, 0x22, 0xe7, 0xa1, 0x8e, 0x49, 0x96, 0x5e, 0x0d,
	0x11, 0x21, 0xfc, 0xba, 0xeb, 0x11, 0xdc, 0xb0, 0x4c, 0xe7, 0xdf, 0x05, 0x38, 0x56, 0x17, 0x28,
	0x32, 0x22, 0x89, 0xb9, 0xaa, 0x24, 0xf4, 0xe5, 0xd2, 0xcd, 0x3f, 0xda, 0xe6, 0xe8, 0x7b, 0xb1,
	0x4b, 0xd8, 0x50, 0x4e, 0xaa, 0x03, 0x2b, 0xae, 0x16, 0x75, 0x71, 0x20, 0xb8, 0x3a, 0xd3, 0xe0,
	0x72, 0xb2, 0x56, 0x9e, 0xee, 0xca, 0xa3, 0x25, 0x37, 0x56, 0x1b, 0x5c, 0x1b, 0xf6, 0x29, 0x63,
	0xe1, 0x20, 0x19, 0xaa, 0xf3, 0xee, 0xb8, 0x97, 0x75, 0x2c, 0xcc, 0x58, 0xc2, 0xea, 0xc9, 0x90,
	0x92, 0x22, 0x65, 0xf2, 0x07, 0x3a, 0x05, 0xf1, 0x33, 0xbc, 0xe5, 0x23, 0x7b, 0x4f, 0x86, 0xaf,
	0x40, 0x19, 0xbb, 0xe6, 0x23, 0xf4, 0x7b, 0x38, 0x19, 0xd1, 0xf9, 0x75, 0x85, 0x4c, 0x03, 0xd9,
	0x05, 0x79, 0x6f, 0x3f, 0xbf, 0x77, 0x87, 0x26, 0x68, 0xb4, 0x24, 0x14, 0x20, 0x28, 0x80, 0xa3,
	0x59, 0x21, 0x2e, 0x90, 0x8b, 0x12, 0xf9, 0x67, 0xdb, 0x02, 0xbd, 0xd2, 0x09, 0x88, 0xc5, 0x32,
	0x22, 0x89, 0x3a, 0x02, 0x5b, 0xf2, 0xd2, 0xa2, 0xc6, 0x17, 0xe0, 0xfb, 0x12, 0xfc, 0xc9, 0x76,
	0x8e, 0xda, 0x40, 0x92, 0xe4, 0xe3, 0xc9, 0xda, 0x82, 0x34, 0x74, 0x0b, 0x9f, 0x48, 0x43, 0xd3,
	0x78, 0x93, 0xa9, 0x92, 0x34, 0xf5, 0xcb, 0xed, 0xa6, 0x36, 0xb2, 0x10, 0x91, 0xbe, 0xaf, 0x2e,
	0x09, 0x40, 0xc7, 0xd9, 0x3c, 0x32, 0x94, 0xa1, 0x78, 0xe5, 0x7a, 0xad, 0x1e, 0xc1, 0x96, 0xe9,
	0xfc, 0xd5, 0x80, 0xd2, 0xfc, 0x7a, 0x91, 0x05, 0x15, 0x1f, 0x93, 0x57, 0x98, 0x84, 0x98, 0x90,
	0x0e, 0xb1, 0x0c, 0x74, 0x0c, 0x87, 0x97, 0x6e, 0x23, 0xac, 0x13, 0xdc, 0xc0, 0xed, 0xc0, 0x73,
	0x5b, 0xbe, 0x65, 0xa2, 0x43, 0x28, 0x0b, 0x21, 0xc1, 0x2f, 0x7b, 0xd8, 0x0f, 0xac, 0x1c, 0x3a,
	0x82, 0x03, 0xfc, 0xba, 0x8e, 0x71, 0x03, 0x37, 0x42, 0xe2, 0x06, 0xd8, 0xca, 0x23, 0x04, 0xd5,
	0xb9, 0xe8, 0x65, 0xaf, 0x13, 0xb8, 0xd6, 0x1e, 0x3a, 0x01, 0xab, 0xd7, 0xf5, 0x03, 0x82, 0xdd,
	0xeb, 0x30, 0xf0, 0xae, 0x71, 0xa7, 0x17, 0x58, 0x05, 0x64, 0xc3, 0xc9, 0x5c, 0xda, 0x6b, 0xbb,
	0xaf, 0x5c, 0xaf, 0xe5, 0x5e, 0xb6, 0xb0, 0x55, 0x74, 0xbe, 0xc9, 0x03, 0xaa, 0x8f, 0x23, 0x1a,
	0xa7, 0x84, 0xbe, 0x9f, 0x52, 0xae, 0xf8, 0x19, 0xfd, 0x0a, 0x0a, 0x6f, 0x69, 0x7f, 0x48, 0xef,
	0x3d, 0x49, 0x6a, 0xf5, 0x79, 0x69, 0x9a, 0xdf, 0xbb, 0x34, 0x73, 0xf3, 0xd2, 0x7c, 0x0d, 0xc7,
	0xcb, 0x79, 0x2e, 0x1d, 0x94, 0xb5, 0xb5, 0x75, 0x66, 0x5a, 0x1f, 0x8c, 0xc9, 0x51, 0x36, 0xcb,
	0x25, 0x04, 0x7a, 0x09, 0x56, 0x26, 0xc9, 0x15, 0xec, 0xde, 0xae, 0x79, 0x74, 0x75, 0xca, 0x12,
	0x8c, 0x37, 0x97, 0x48, 0xc8, 0x21, 0x9c, 0xae, 0x67, 0xb8, 0x42, 0x56, 0x75, 0xf9, 0x8b, 0xfb,
	0x25, 0xb8, 0xc6, 0xff, 0x68, 0x35, 0xbf, 0x95, 0x95, 0x3f, 0xc1, 0x83, 0x4d, 0xe9, 0xad, 0xec,
	0x14, 0x77, 0x35, 0xac, 0x6d, 0x13, 0x05, 0x39, 0x5d, 0x4f, 0x6e, 0x09, 0xe7, 0x7c, 0x6b, 0x02,
	0x52, 0x54, 0x75, 0x4d, 0x39, 0xef, 0x8f, 0xe8, 0xff, 0x98, 0x1a, 0xee, 0x3c, 0x35, 0x04, 0xcf,
	0x3e, 0xd9, 0xc5, 0x8d, 0x59, 0x83, 0xd9, 0x6e, 0xf5, 0x47, 0x38, 0xe6, 0x52, 0x61, 0xb9, 0x53,
	0xe7, 0x76, 0x31, 0xc8, 0x96, 0x09, 0x80, 0x20, 0xbe, 0xb6, 0x80, 0x08, 0x1c, 0x6a, 0xfc, 0x39,
	0x65, 0xe4, 0x77, 0x91, 0xea, 0x06, 0x26, 0x27, 0x55, 0xbe, 0x24, 0x74, 0x1e, 0xe9, 0x3e, 0x67,
	0x41, 0xa5, 0xdd, 0x09, 0xbc, 0x2b, 0xaf, 0xee, 0x06, 0x72, 0x00, 0x50, 0x9d, 0xcf, 0xef, 0x76,
	0xda, 0xbe, 0xa0, 0x89, 0x7f, 0x1a, 0x50, 0x5d, 0x9e, 0x92, 0xd0, 0x13, 0x40, 0x8c, 0xf2, 0x64,
	0x3c, 0x15, 0xce, 0xe9, 0x39, 0x4c, 0xbd, 0x19, 0x0e, 0xc8, 0xd1, 0x62, 0x45, 0x4d, 0x63, 0x1c,
	0xd9, 0x50, 0x9c, 0xb0, 0xe4, 0x26, 0x1a, 0xab, 0x18, 0x97, 0xc8, 0xec, 0x13, 0xfd, 0x06, 0x4a,
	0xc3, 0xe8, 0x96, 0xc6, 0xba, 0xbd, 0xdf, 0xeb, 0xda, 0x16, 0x3b, 0xd0, 0xaf, 0xa1, 0xa0, 0xe6,
	0x35, 0x39, 0x11, 0x97, 0x2f, 0x1e, 0xee, 0x9a, 0xf1, 0xf4, 0xa5, 0xab, 0x0d, 0xce, 0xdf, 0x73,
	0x50, 0xce, 0xc8, 0x11, 0x82, 0x7c, 0xdc, 0xbf, 0xa5, 0xf2, 0x10, 0x25, 0x22, 0x7f, 0x23, 0x02,
	0x7a, 0x34, 0x0e, 0x33, 0xd4, 0xf1, 0xec, 0x3b, 0x6d, 0xe8, 0xdf, 0x0b, 0x16, 0xd1, 0xc3, 0xa8,
	0x8c, 0x76, 0x07, 0x40, 0xce, 0xe8, 0x0a, 0x32, 0xb7, 0xeb, 0xed, 0x9a, 0x85, 0x94, 0xc3, 0xf9,
	0x02, 0xb1, 0x74, 0x37, 0xfb, 0x46, 0x5f, 0xc1, 0x9e, 0x1a, 0xfa, 0xf3, 0xbb, 0x78, 0x62, 0x6d,
	0xe8, 0x57, 0x9b, 0x9c, 0x01, 0x1c, 0xae, 0x78, 0x8b, 0x4a, 0xb0, 0xd7, 0x74, 0x7b, 0x4d, 0xac,
	0xda, 0x45, 0xbd, 0xd3, 0x6b, 0x07, 0x98, 0x58, 0xa6, 0xe0, 0x6a, 0xfd, 0x21, 0x5a, 0x82, 0x1b,
	0xe0, 0x50, 0xa9, 0xe5, 0xd0, 0x8f, 0xe1, 0x93, 0xd9, 0x0a, 0xc1, 0xdd, 0x96, 0x5b, 0xc7, 0xe1,
	0xd7, 0x5e, 0xf0, 0x42, 0xaf, 0xe7, 0x9d, 0x2f, 0xa1, 0xba, 0xec, 0x3f, 0x2a, 0x42, 0xce, 0x6b,
	0x8b, 0xb1, 0x6a, 0x1f, 0xf2, 0xad, 0x4e, 0xbb, 0x69, 0x99, 0xc2, 0xec, 0x55, 0xab, 0xe3, 0x8a,
	0x96, 0x02, 0x50, 0x68, 0x74, 0x7a, 0xa2, 0x0f, 0xe4, 0x9d, 0x6f, 0x0c, 0xb0, 0x56, 0x9d, 0x47,
	0x9f, 0x41, 0x39, 0x8a, 0xd3, 0xe7, 0x17, 0xfa, 0xb9, 0x23, 0xc6, 0xad, 0x3d, 0x02, 0x52, 0x24,
	0xb5, 0xb4, 0xc2, 0x17, 0x9f, 0x6b, 0x05, 0x71, 0x73, 0x39, 0xa9, 0xf0, 0xc5, 0xe7, 0x73, 0x85,
	0x9b, 0x71, 0xd2, 0x4f, 0xb5, 0x82, 0xb8, 0x07, 0x93, 0x80, 0x14, 0x29, 0x85, 0x87, 0x50, 0x19,
	0x26, 0xd3, 0x37, 0x63, 0x1a, 0x2e, 0xa2, 0x6b, 0x90, 0xb2, 0x92, 0xa9, 0xa7, 0xd2, 0x73, 0x28,
	0xcd, 0xb3, 0x12, 0x59, 0x90, 0x7b, 0x47, 0x3f, 0xe8, 0xf4, 0x11, 0x3f, 0xd1, 0xc9, 0xec, 0x62,
	0x54, 0xce, 0xeb, 0x80, 0x5f, 0x02, 0x5a, 0x7f, 0x3e, 0x8b, 0x0a, 0xc9, 0xbe, 0xbc, 0x4b, 0x64,
	0xf6, 0x29, 0xf2, 0x72, 0x92, 0xb0, 0x54, 0x0f, 0x86, 0xf2, 0xf7, 0xe3, 0x3f, 0x88, 0xd7, 0xf5,
	0x72, 0xa7, 0x12, 0x7d, 0xb9, 0x89, 0x83, 0x70, 0x3e, 0xc5, 0xab, 0x22, 0x6e, 0x7a, 0xbe, 0xba,
	0xbc, 0x63, 0x38, 0xec, 0x76, 0xfc, 0x20, 0x9c, 0x89, 0x70, 0xc3, 0xca, 0xa1, 0x8f, 0xe0, 0x48,
	0x0a, 0x7b, 0xed, 0x8c, 0x38, 0xff, 0xb8, 0x09, 0xd6, 0xea, 0x0b, 0x4c, 0xb4, 0xf4, 0x5e, 0xdb,
	0xad, 0xff, 0xae, 0xdd, 0xf9, 0xba, 0x85, 0x1b, 0x4d, 0xdc, 0xb0, 0x0c, 0x41, 0x1c, 0x4b, 0x12,
	0x13, 0x1d, 0x40, 0xa9, 0x4b, 0x3a, 0x62, 0xd6, 0x10, 0xf8, 0x97, 0xbf, 0x85, 0xa7, 0x09, 0x1b,
	0xd5, 0xe8, 0x9b, 0xfe, 0x87, 0x64, 0x42, 0x63, 0x9e, 0x4c, 0xd9, 0x80, 0x6e, 0xc8, 0x4f, 0xf9,
	0x9f, 0xd2, 0x20, 0x19, 0xd7, 0xee, 0x9e, 0x5d, 0x82, 0xb4, 0xf7, 0x66, 0x7a, 0xf3, 0xea, 0xd9,
	0x0b, 0xe3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0x74, 0xc8, 0x92, 0x78, 0x12, 0x00, 0x00,
}
