
bulkload: Tool to populate rocksdb with random keys.  Then junoload can run against the rocksdb.
junoload: Tool to run load test with "C,G,U,S,D" pattern, and collect performance data.


#=================================================================================
# Step 1: Populate rocksdb with random keys.
#
# The parameter <begin>,<end> specifies a range of indexes from <begin> to <end> - 1, 
# such as -create 0,10000.  This will create 10000 entries in rocksdb. 
# Note there is no space in "0,10000" string.
# 
# The following will generate a set of random keys, one for each index number in the range <begin>,<end>.
#=================================================================================

$ ./bulkload -s <ip:port> -ttl <ttl> -len <payload-len> -create <begin>,<end> 
 

#=================================================================================
# Step 2: Run junoload.
#=================================================================================

$ ./junoload -s <ip:port> -c <config> -p <pattern> -t <ttl> -l <payload-len> -t <running-time> \
             -f <num-req-per-sec> -n <num-executor> ...


1) bulkload also supports get, update, set, delete options with an index range as follows.
   Random keys generated by -create option can be accessed with same indexes before the keys expire.

$ ./bulkload -s <ip:port> -get    <begin>,<end>
$ ./bulkload -s <ip:port> -ttl <ttl> -len <payload-len> -update <begin>,<end>
$ ./bulkload -s <ip:port> -ttl <ttl> -len <payload-len> -set    <begin>,<end>
$ ./bulkload -s <ip:port> -delete <begin>,<end>

2) Random keys generated by bulkload do not collide with the keys generated by junoload.  New keys can be
   added to rocksdb any time using the -create or -set option with different ranges. 
